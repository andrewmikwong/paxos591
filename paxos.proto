// paxos proto file

syntax = "proto3";

option objc_class_prefix = "RTG";

package paxos;

// Interface exported by the server.
service Chatter {
  rpc SendChatMessage (ChatRequest) returns(ChatReply) {}
}

service Paxos {
  rpc Prepare(PrepareSend) returns (PromiseReply){}
  rpc Accept(AcceptSend) returns (AcceptReply){}
  rpc Learn(LearnSend) returns (LearnReply){}
}

message LearnReply{
  int32 ack=1;
}

message LearnSend{
  int32 n=1;
  string val=2;
  int32 rid=3;
  int32 slot=4;
}

message AcceptSend{
  int32 n=1;
  string val=2;
  int32 slot=3;
}

message AcceptReply{
  int32 view=1;
}

message PrepareSend{
  int32 proposal =1;
}

message PromiseReply{
  repeated int32 highest_proposals = 1;
  repeated int32 highest_values = 2;
  //has the accepter already accepted anything in this slot?
  repeated int32 accepted=3;
  int32 ignored=4;
}

message ChatRequest {
  string mesg = 1;
  int32 seq_num = 2;
  int32 rid = 3;
}

message ChatReply {
  string mesg = 1;
}

message Empty {

}
